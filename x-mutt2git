#!/bin/bash
#
# Grab patch from mutt and apply to local/remote git

if [ "$#" -gt 2 ]; then
        echo "Usage: x mutt2git <local|remote>"
        exit 1
fi

if [[ "$1" != "local" && "$1" != "remote" ]]; then
	echo "Illegal parameter"
	exit 1
fi

. $HOME/.x-tools

export DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
. $DIR/common

PATCH=$(mktemp)
cat - > $PATCH
sed -i -e '/^Issue:[ 0-9]*/Id' -e '/^Change-id:[ 0-9]*/Id' $PATCH

COUNT=$(grep PATCH $PATCH | grep Subject | grep -c rdma-core)
if [ $COUNT -eq 1 ]; then
	PRJ="rdma-core"
else
	COUNT=$(grep PATCH $PATCH | grep Subject | grep -c iproute)
	if [ $COUNT -eq 1 ]; then
		PRJ="iproute2"
	else
		PRJ="kernel"
	fi
fi

if [ "$1" == "local" ]; then
	echo "Applying to $X_SRC/$PRJ"
	cd $X_SRC/$PRJ
	git am -s --reject $PATCH
else
	echo "Applying to $X_SYNC_REMOTE_SERVER:/images/leonro/src/$PRJ"
	scp $PATCH $X_SYNC_REMOTE_SERVER:/tmp/
	ssh $X_SYNC_REMOTE_SERVER "cd /images/leonro/src/$PRJ && git am -s --reject /tmp/$(basename $PATCH)"
	ssh $X_SYNC_REMOTE_SERVER rm -f /tmp/$(basename $PATCH)
fi

rm -f $PATCH
